{"version":3,"sources":["webpack:///./src/templates/course-list-template.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Courses/Courses.js","webpack:///./src/components/Courses/index.js"],"names":["query","CourseListTemplate","data","pageContext","site","siteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","description","Pagination","className","rel","to","PAGINATION","PREV_PAGE","NEXT_PAGE","Courses","isHorizontal","map","edge","key","node","fields","slug","variation","path","frontmatter","categorySlug","category"],"mappings":"0FAAA,qGAuCaA,EAAK,aA8BHC,UA9DY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EAIhDD,EAAKE,KAAKC,aAFLC,EAF2C,EAElDC,MACUC,EAHwC,EAGlDC,SAIAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,YACAC,EAGET,EAHFS,YACAC,EAEEV,EAFFU,aACAC,EACEX,EADFW,aAGMC,EAAUb,EAAKc,kBAAfD,MACFE,EAAYP,EAAc,EAAd,kBAAoCA,EAApC,MAAqDJ,EAAcA,EAErF,OACE,kBAAC,IAAD,CAAQC,MAAOU,EAAWC,YAAaV,GACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASO,MAAOA,IAChB,kBAAC,IAAD,CACEF,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA,Q,qECHRQ,G,OAxBI,SAAC,GAAD,IACjBN,EADiB,EACjBA,aACAC,EAFiB,EAEjBA,aACAH,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,YAJiB,OAMjB,yBAAKQ,UAAU,cACZR,GACC,yBAAKQ,UAAU,mBACb,kBAAC,OAAD,CAAMC,IAAI,OAAOC,GAAIT,EAAcO,UAAU,wBAC1CG,IAAWC,YAIjBb,GACC,yBAAKS,UAAU,mBACb,kBAAC,OAAD,CAAMC,IAAI,OAAOC,GAAIR,EAAcM,UAAU,wBAC1CG,IAAWE,eCtBtB,mC,8DC2CeC,G,OAvCC,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,SAAUY,aAEtB,yBAAKP,UAAU,4BACZL,EAAMa,KAAI,SAAAC,GAAI,OACb,yBAAKT,UAAU,kBAAkBU,IAAKD,EAAKE,KAAKC,OAAOC,MACrD,yBAAKb,UAAU,wBACb,kBAAC,IAAD,CAAYc,UAAW,UAAWC,KAAMN,EAAKE,KAAKC,OAAOC,MACtDJ,EAAKE,KAAKK,YAAY7B,QAG3B,kBAAC,IAAD,CAAY2B,UAAW,OAAQC,KAAMN,EAAKE,KAAKC,OAAOC,MAAtD,iBAON,yBAAKb,UAAU,cACZL,EAAMa,KAAI,SAAAC,GAAI,OACb,yBAAKT,UAAU,kBAAkBU,IAAKD,EAAKE,KAAKC,OAAOC,MACrD,kBAAC,IAAD,CAAYC,UAAW,WAAYC,KAAMN,EAAKE,KAAKC,OAAOK,cACvDR,EAAKE,KAAKK,YAAYE,UAEzB,yBAAKlB,UAAU,wBACb,kBAAC,IAAD,CAAYc,UAAW,UAAWC,KAAMN,EAAKE,KAAKC,OAAOC,MACtDJ,EAAKE,KAAKK,YAAY7B,QAG3B,uBAAGa,UAAU,8BACVS,EAAKE,KAAKK,YAAYlB,aAEzB,kBAAC,IAAD,CAAYgB,UAAW,OAAQC,KAAMN,EAAKE,KAAKC,OAAOC,MAAtD,mBCnCV","file":"component---src-templates-course-list-template-js-e6ea3a137c2c6726766b.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Courses from '../components/Courses';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\n\nconst CourseListTemplate = ({ data, pageContext }) => {\n  const {\n    title: siteTitle,\n    subtitle: siteSubtitle\n  } = data.site.siteMetadata;\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Courses - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Page>\n        <Courses edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CourseListTemplate($coursesLimit: Int!, $coursesOffset: Int!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n    allMarkdownRemark(\n        limit: $coursesLimit,\n        skip: $coursesOffset,\n        filter: { frontmatter: { template: { eq: \"course\" }, draft: { ne: true } } },\n      ){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CourseListTemplate;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { PAGINATION } from \"../../constants\";\nimport \"./Pagination.scss\";\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage\n}) => (\n  <div className=\"Pagination\">\n    {hasPrevPage && (\n      <div className=\"Pagination-prev\">\n        <Link rel=\"prev\" to={prevPagePath} className=\"Pagination-prev-link\">\n          {PAGINATION.PREV_PAGE}\n        </Link>\n      </div>\n    )}\n    {hasNextPage && (\n      <div className=\"Pagination-next\">\n        <Link rel=\"next\" to={nextPagePath} className=\"Pagination-next-link\">\n          {PAGINATION.NEXT_PAGE}\n        </Link>\n      </div>\n    )}\n  </div>\n);\n\nexport default Pagination;\n","export { default } from './Pagination';\n","import React from \"react\";\nimport StyledLink from \"../Link\";\nimport \"./Courses.scss\";\n\nconst Courses = ({ edges, isHorizontal }) =>\n  (isHorizontal ? (\n    <div className=\"CourseList--isHorizontal\">\n      {edges.map(edge => (\n        <div className=\"CourseList-card\" key={edge.node.fields.slug}>\n          <div className=\"CourseList-itemTitle\">\n            <StyledLink variation={\"primary\"} path={edge.node.fields.slug}>\n              {edge.node.frontmatter.title}\n            </StyledLink>\n          </div>\n          <StyledLink variation={\"pill\"} path={edge.node.fields.slug}>\n            Go Learn\n          </StyledLink>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div className=\"CourseList\">\n      {edges.map(edge => (\n        <div className=\"CourseList-item\" key={edge.node.fields.slug}>\n          <StyledLink variation={\"tertiary\"} path={edge.node.fields.categorySlug}>\n            {edge.node.frontmatter.category}\n          </StyledLink>\n          <div className=\"CourseList-itemTitle\">\n            <StyledLink variation={\"primary\"} path={edge.node.fields.slug}>\n              {edge.node.frontmatter.title}\n            </StyledLink>\n          </div>\n          <p className=\"CourseList-itemDescription\">\n            {edge.node.frontmatter.description}\n          </p>\n          <StyledLink variation={\"pill\"} path={edge.node.fields.slug}>\n            Go Learn\n          </StyledLink>\n        </div>\n      ))}\n  </div>\n  ));\n\nexport default Courses;\n","export { default } from './Courses';\n"],"sourceRoot":""}