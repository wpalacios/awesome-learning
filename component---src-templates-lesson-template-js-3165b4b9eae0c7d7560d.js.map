{"version":3,"sources":["webpack:///./src/utils/analyticsEventHandler.js","webpack:///./src/components/LessonButton/LessonButton.js","webpack:///./src/components/Lesson/Lesson.js","webpack:///./src/templates/lesson-template.js","webpack:///./src/components/ContentSection/ContentSection.js","webpack:///./src/components/ContentSection/index.js","webpack:///./src/components/Block/Block.js","webpack:///./src/components/Block/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["analyticsEventHandler","eventCategory","eventLabel","window","gtag","Error","event_category","event_label","handleEventClick","path","error","console","log","PrimitiveLessonButton","onClick","children","href","className","rel","target","PureLessonButton","data","defaultTab","fullPath","site","siteMetadata","repoOwner","defaultProps","repoName","LessonButton","props","query","render","Lesson","lesson","slug","frontmatter","title","description","timeToCompletion","videoLinks","readingLinks","preReadQuizLink","preReadQuiz","course","secondaryExerciseUrl","descriptionParagraphs","split","toLowerCase","variation","ContentSection","map","paragraph","key","Block","is","mb","subTitle","link","width","height","src","frameBorder","allow","allowFullScreen","readingLink","isExternal","LessonTemplate","siteTitle","siteSubtitle","subtitle","markdownRemark","lessonTitle","courseDescription","fields","metaDescription","Layout","Page","isLight","contentAlignment","titleAlignment","headerClasses","cx","contentClasses","textAlignment","mt","ml","mr","RenderedElement","style","marginTop","marginRight","marginBottom","marginLeft","createHTML","url","this","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","length"],"mappings":"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","file":"component---src-templates-lesson-template-js-3165b4b9eae0c7d7560d.js","sourcesContent":["const analyticsEventHandler = (eventCategory = \"exercise click\", eventLabel) => {\n  if (window.gtag) {\n    window.gtag(\"event\", \"click\", {\n      event_category: eventCategory,\n      event_label: eventLabel\n    });\n  } else {\n    throw new Error('there is no gtag here')\n  }\n};\n\nexport default analyticsEventHandler;","import React from 'react';\nimport {graphql, StaticQuery} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport analyticsEventHandler from '../../utils/analyticsEventHandler';\nimport './LessonButton.scss';\n\nconst handleEventClick = path => {\n  try {\n    analyticsEventHandler('exercise click', path);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const PrimitiveLessonButton = ({\n  path,\n  onClick = handleEventClick,\n  children\n}) => (\n  <a\n    href={path}\n    className=\"LessonButton-link\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n    onClick={() => onClick(path)}\n  >\n    {children}\n  </a>\n);\n\nexport const PureLessonButton = ({path, data, defaultTab}) => {\n  const {repoOwner} = data.site.siteMetadata;\n  const fullPath = `https://codesandbox.io/s/github/${repoOwner}/awesome-learning-exercises/tree/master/${path}?fontsize=14&previewwindow=${defaultTab}`;\n  return (\n    <PrimitiveLessonButton path={fullPath}>\n      Click here to start your exercises!\n    </PrimitiveLessonButton>\n  );\n};\n\nconst LessonButton = props => (\n  <StaticQuery\n    query={graphql`\n      query LessonButtonQuery {\n        site {\n          siteMetadata {\n            repoName\n            repoOwner\n          }\n        }\n      }\n    `}\n    render={data => (\n      <PureLessonButton data={data} {...props} onClick={handleEventClick} />\n    )}\n  />\n);\n\nPureLessonButton.propTypes = {\n  path: PropTypes.string.isRequired,\n  repoName: PropTypes.string,\n  repoOwner: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\n\nPureLessonButton.defaultProps = {\n  repoName: 'awesome-learning',\n  repoOwner: 'wayfair',\n  onClick() {}\n};\nexport default LessonButton;\n","import React from 'react';\nimport StyledLink from '../Link';\nimport Block from '../Block';\nimport LessonButton, { PrimitiveLessonButton } from '../LessonButton';\nimport ContentSection from '../ContentSection';\nimport './lesson.scss';\n\nconst Lesson = ({ lesson, slug }) => {\n  const {\n    title,\n    description,\n    timeToCompletion,\n    videoLinks,\n    readingLinks,\n    preReadQuizLink,\n    preReadQuiz,\n    course,\n    defaultTab,\n    secondaryExerciseUrl\n  } = lesson.frontmatter;\n  // Split the description into different paragraphs based on new lines\n  const descriptionParagraphs = description.split(/\\r?\\n\\n/);\n  const path = slug.toLowerCase().split('/courses/')[1];\n  return (\n    <div className=\"Lesson\">\n      <div className=\"Lesson-homeButton\">\n        <StyledLink variation={'tertiary'} path={`/courses/${course}/`}>\n          Back to {course}\n        </StyledLink>\n      </div>\n\n      <ContentSection title={title}>\n        {timeToCompletion && (\n          <p>\n            ⌛ Average time to completion ={' '}\n            <span className=\"Lesson-time\">{timeToCompletion} ⌛</span>\n          </p>\n        )}\n        {descriptionParagraphs.map((paragraph, key) => (\n          <Block is=\"p\" key={key} mb=\"16px\">\n            {paragraph}\n          </Block>\n        ))}\n      </ContentSection>\n      <ContentSection\n        title=\" \"\n        subTitle=\"Pre-Session Learning Materials (required)\"\n      >\n        <Block is=\"p\" mb=\"16px\">\n          Check out this content before your session begins to get an idea of\n          what you will be working on.\n        </Block>\n        {videoLinks\n          && videoLinks.map(link => (\n          <iframe\n            key={link}\n            width=\"560\"\n            height=\"315\"\n            src={link}\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowFullScreen\n          />\n          ))}\n      </ContentSection>\n\n      {readingLinks && (\n        <ContentSection title=\" \" subTitle=\"Pre-read Materials\">\n          <Block is=\"p\" mb=\"16px\">\n            We've curated these resources to give you greater depth on these\n            subjects. Don't feel like you have to read them all.\n          </Block>\n          <Block is=\"p\" mb=\"16px\">\n            Taking the time to go through all of these resources will definitely\n            put you on the road to expert-level knowledge in this subject\n            matter.\n          </Block>\n          <ul className=\"Lesson-readingList\">\n            {readingLinks.map(readingLink => (\n              <li className=\"Lesson-readingListItem\" key={readingLink.title}>\n                <StyledLink\n                  isExternal\n                  variation={'tertiary'}\n                  path={readingLink.link}\n                >\n                  {readingLink.title}\n                </StyledLink>\n                <p>- {readingLink.description}</p>\n              </li>\n            ))}\n          </ul>\n        </ContentSection>\n      )}\n      {(preReadQuiz || preReadQuizLink) && (\n        <ContentSection title=\" \" subTitle=\"Pre-read Quiz\">\n          <Block is=\"p\" mb=\"16px\">\n            This pre-read quiz is designed to challenge your knowledge of the\n            pre-read material. These quizzes are a great way to check your\n            comprehension, and we highly recommend taking them.\n          </Block>\n          <StyledLink\n            path={preReadQuiz !== null ? `${slug}/quiz` : preReadQuizLink}\n            isExternal={preReadQuiz === null}\n            variation={'tertiary'}\n          >\n            Quiz Link\n          </StyledLink>\n        </ContentSection>\n      )}\n\n      <ContentSection title=\" \" subTitle=\"Exercises\">\n        {secondaryExerciseUrl ? (\n          <PrimitiveLessonButton path={secondaryExerciseUrl}>\n            Start the Workshop\n          </PrimitiveLessonButton>\n        ) : (\n          <LessonButton defaultTab={defaultTab} path={path} />\n        )}\n      </ContentSection>\n\n      <ContentSection title=\" \" subTitle=\"Session Feedback\">\n        <Block is=\"p\" mb=\"16px\">\n          We need as much feedback as possible to make this platform more\n          effective for you and others like you. Please take a moment to fill\n          out this session survey.\n        </Block>\n        <StyledLink\n          isExternal\n          path=\"https://docs.google.com/forms/d/e/1FAIpQLSeiB_M1YmwwwG9BNhGnd1Nn_BhnzOfHFUDrZGz1PAvm8A1NxA/viewform\"\n          variation={'tertiary'}\n        >\n          Survey Link\n        </StyledLink>\n      </ContentSection>\n    </div>\n  );\n};\n\nexport default Lesson;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Lesson from \"../components/Lesson\";\nimport Page from '../components/Page';\n\nconst LessonTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = data.site.siteMetadata;\n\n  const {\n    title: lessonTitle,\n    description: courseDescription\n  } = data.markdownRemark.frontmatter;\n\n  const { slug } = data.markdownRemark.fields;\n\n  const metaDescription = courseDescription !== null ? courseDescription : siteSubtitle;\n\n  return (\n    <Layout\n      title={`${lessonTitle} - ${siteTitle}`}\n      description={metaDescription}\n    >\n      <Page>\n        <Lesson lesson={data.markdownRemark} slug={slug} />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query LessonBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        subtitle\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        description\n        course\n        tags\n        title\n        timeToCompletion\n        videoLinks\n        preReadQuizLink\n        defaultTab\n        readingLinks {\n          link\n          description\n          title\n        }\n        secondaryExerciseUrl\n        preReadQuiz {\n          description\n          questions {\n            choices {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default LessonTemplate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport \"./ContentSection.scss\";\n\nconst ContentSection = ({\n  className,\n  children,\n  title,\n  subTitle,\n  isLight,\n  contentAlignment,\n  titleAlignment\n}) => {\n  const headerClasses = cx(\"ContentSection-title\", {\n    \"ContentSection-title--alignCenter\": titleAlignment === \"center\",\n    \"ContentSection-title--alignLeft\": titleAlignment === \"left\",\n    \"ContentSection-title--textLight\": isLight\n  });\n  const contentClasses = cx(`ContentSection-content ${className}`, {\n    \"ContentSection-content--alignCenter\": contentAlignment === \"center\",\n    \"ContentSection-content--alignLeft\": contentAlignment === \"left\"\n  });\n\n  return (\n    <div className=\"ContentSection\">\n      {title && (\n        <header className={headerClasses}>\n          <h1>{title}</h1>\n          {subTitle && <h2>{subTitle}</h2>}\n        </header>\n      )}\n      <div className={contentClasses}>{children}</div>\n    </div>\n  );\n};\n\nContentSection.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isLight: PropTypes.bool,\n  contentAlignment: PropTypes.oneOf([\"left\", \"center\"]),\n  textAlignment: PropTypes.oneOf([\"left\", \"center\"])\n};\n\nContentSection.defaultProps = {\n  className: \"\",\n  title: null,\n  subTitle: null,\n  contentAlignment: \"left\",\n  textAlignment: \"left\",\n  isLight: false\n};\n\nexport default ContentSection;\n","export { default } from './ContentSection';","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Block = ({\n  is,\n  children,\n  mt,\n  mb,\n  ml,\n  mr\n}) => {\n  const RenderedElement = is;\n  return (\n    <RenderedElement\n      style={{\n        marginTop: `${mt}`,\n        marginRight: `${mr}`,\n        marginBottom: `${mb}`,\n        marginLeft: `${ml}`\n      }}\n    >\n      {children}\n    </RenderedElement>\n  );\n};\n\nBlock.propTypes = {\n  is: PropTypes.string\n};\n\nBlock.defaultProps = {\n  is: \"div\",\n  mb: \"0px\",\n  mr: \"0px\",\n  mt: \"0px\",\n  ml: \"0px\"\n};\n\nexport default Block;\n","export { default } from './Block';","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}